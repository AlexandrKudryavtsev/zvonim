import React, { useState } from 'react';
import type { RoomData } from '../App';
import { useRoom } from '../hooks/useRoom';
import { VideoCall } from './VideoCall';

interface RoomLobbyProps {
  roomData: RoomData;
  onLeaveRoom: () => void;
}

export const RoomLobby: React.FC<RoomLobbyProps> = ({ roomData, onLeaveRoom }) => {
  const {
    users,
    isConnected,
    error,
    callState,
    leaveRoom,
    startCallWithUser,
    initializeLocalMedia,
    stopAllMedia
  } = useRoom({
    roomId: roomData.roomId,
    userId: roomData.userId,
    userName: roomData.userName,
    onUserLeft: onLeaveRoom,
  });

  const [isInitializingMedia, setIsInitializingMedia] = useState(false);

  const handleLeaveRoom = async () => {
    await leaveRoom();
    onLeaveRoom();
  };

  const copyRoomId = () => {
    navigator.clipboard.writeText(roomData.roomId);
    alert('ID –∫–æ–º–Ω–∞—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
  };

  const handleStartCallWithUser = async (targetUserId: string) => {
    try {
      if (!callState.hasLocalStream) {
        setIsInitializingMedia(true);
        await initializeLocalMedia();
        setIsInitializingMedia(false);
      }
      await startCallWithUser(targetUserId);
    } catch (err) {
      setIsInitializingMedia(false);
      console.error('Failed to start call:', err);
    }
  };

  const handleInitializeMedia = async () => {
    try {
      setIsInitializingMedia(true);
      await initializeLocalMedia();
    } catch (err) {
      console.error('Failed to initialize media:', err);
    } finally {
      setIsInitializingMedia(false);
    }
  };

  return (
    <div style={{ maxWidth: '800px', margin: '20px auto', padding: '20px' }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ */}
      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '20px' }}>
        <h1>–ö–æ–º–Ω–∞—Ç–∞: {roomData.roomId}</h1>
        <button
          onClick={handleLeaveRoom}
          style={{ padding: '8px 16px', background: '#dc3545', color: 'white', border: 'none', borderRadius: '4px' }}
        >
          –í—ã–π—Ç–∏
        </button>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –∫–æ–º–Ω–∞—Ç–µ */}
      <div style={{ marginBottom: '20px' }}>
        <p><strong>–í–∞—à–µ –∏–º—è:</strong> {roomData.userName}</p>
        <p><strong>–í–∞—à ID:</strong> {roomData.userId}</p>
        <div style={{ display: 'flex', alignItems: 'center', gap: '10px', marginBottom: '10px' }}>
          <strong>ID –∫–æ–º–Ω–∞—Ç—ã:</strong>
          <code style={{ background: '#f5f5f5', padding: '4px 8px', borderRadius: '4px' }}>
            {roomData.roomId}
          </code>
          <button
            onClick={copyRoomId}
            style={{ padding: '4px 8px', background: '#6c757d', color: 'white', border: 'none', borderRadius: '4px', fontSize: '12px' }}
          >
            –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
          </button>
        </div>

        {/* –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */}
        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
          <div
            style={{
              width: '10px',
              height: '10px',
              borderRadius: '50%',
              background: isConnected ? '#28a745' : '#dc3545'
            }}
          />
          <span style={{ color: isConnected ? '#28a745' : '#dc3545' }}>
            {isConnected ? '–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ WebSocket' : '–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è WebSocket'}
          </span>
        </div>

        {/* –°—Ç–∞—Ç—É—Å –º–µ–¥–∏–∞ */}
        <div style={{ display: 'flex', alignItems: 'center', gap: '8px', marginTop: '10px' }}>
          <div
            style={{
              width: '10px',
              height: '10px',
              borderRadius: '50%',
              background: callState.hasLocalStream ? '#28a745' : '#ffc107'
            }}
          />
          <span style={{ color: callState.hasLocalStream ? '#28a745' : '#ffc107' }}>
            {callState.hasLocalStream ? '–ö–∞–º–µ—Ä–∞/–º–∏–∫—Ä–æ—Ñ–æ–Ω –¥–æ—Å—Ç—É–ø–Ω—ã' : '–ö–∞–º–µ—Ä–∞/–º–∏–∫—Ä–æ—Ñ–æ–Ω –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã'}
          </span>
        </div>
      </div>

      {/* –û—à–∏–±–∫–∏ */}
      {error && (
        <div style={{ color: 'red', marginBottom: '15px', padding: '10px', background: '#ffe6e6', border: '1px solid red' }}>
          {error}
        </div>
      )}

      {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–¥–∏–∞ */}
      <div style={{ marginBottom: '20px', padding: '15px', background: '#e9ecef', borderRadius: '4px' }}>
        <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–¥–∏–∞:</h3>
        <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>
          {!callState.hasLocalStream && (
            <button
              onClick={handleInitializeMedia}
              disabled={isInitializingMedia}
              style={{
                padding: '8px 16px',
                background: isInitializingMedia ? '#6c757d' : '#007bff',
                color: 'white',
                border: 'none',
                borderRadius: '4px'
              }}
            >
              {isInitializingMedia ? '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...' : 'üìπ –í–∫–ª—é—á–∏—Ç—å –∫–∞–º–µ—Ä—É/–º–∏–∫—Ä–æ—Ñ–æ–Ω'}
            </button>
          )}

          {callState.hasLocalStream && (
            <button
              onClick={stopAllMedia}
              style={{
                padding: '8px 16px',
                background: '#dc3545',
                color: 'white',
                border: 'none',
                borderRadius: '4px'
              }}
            >
              üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –º–µ–¥–∏–∞
            </button>
          )}
        </div>
      </div>

      {/* –í–∏–¥–µ–æ-–∑–≤–æ–Ω–æ–∫ */}
      {(callState.hasLocalStream || callState.isInCall) && (
        <div style={{ marginBottom: '20px' }}>
          <VideoCall
            userId={roomData.userId}
            userName={roomData.userName}
          />
        </div>
      )}

      {/* –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
      <div style={{ marginBottom: '20px' }}>
        <h2>–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–º–Ω–∞—Ç—ã ({users.length})</h2>
        {users.length === 0 ? (
          <p>–í –∫–æ–º–Ω–∞—Ç–µ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</p>
        ) : (
          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>
            {users.map((user) => (
              <div
                key={user.user_id}
                style={{
                  padding: '15px',
                  border: '1px solid #ddd',
                  borderRadius: '4px',
                  display: 'flex',
                  justifyContent: 'space-between',
                  alignItems: 'center',
                  background: user.user_id === roomData.userId ? '#e3f2fd' : 'white'
                }}
              >
                <div style={{ flex: 1 }}>
                  <strong>{user.user_name}</strong>
                  {user.user_id === roomData.userId && <span style={{ marginLeft: '8px', color: '#666' }}>(–í—ã)</span>}

                  {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤ –∑–≤–æ–Ω–∫–µ */}
                  {callState.remoteUsers.includes(user.user_id) && (
                    <span style={{ marginLeft: '8px', color: '#28a745' }}>üìû –≤ –∑–≤–æ–Ω–∫–µ</span>
                  )}
                </div>

                <div style={{ display: 'flex', alignItems: 'center', gap: '15px' }}>
                  {/* –°—Ç–∞—Ç—É—Å –æ–Ω–ª–∞–π–Ω */}
                  <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                    <div
                      style={{
                        width: '10px',
                        height: '10px',
                        borderRadius: '50%',
                        background: user.is_online ? '#28a745' : '#dc3545'
                      }}
                    />
                    <span style={{ fontSize: '12px', color: '#666' }}>
                      {user.is_online ? '–æ–Ω–ª–∞–π–Ω' : '–æ—Ñ–ª–∞–π–Ω'}
                    </span>
                  </div>

                  {/* –ö–Ω–æ–ø–∫–∞ –∑–≤–æ–Ω–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –¥—Ä—É–≥–∏—Ö –æ–Ω–ª–∞–π–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π) */}
                  {user.user_id !== roomData.userId && user.is_online && (
                    <button
                      onClick={() => handleStartCallWithUser(user.user_id)}
                      disabled={isInitializingMedia || !callState.hasLocalStream}
                      style={{
                        padding: '6px 12px',
                        background: callState.hasLocalStream ? '#28a745' : '#6c757d',
                        color: 'white',
                        border: 'none',
                        borderRadius: '4px',
                        fontSize: '12px'
                      }}
                    >
                      {isInitializingMedia ? '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞...' : 'üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å'}
                    </button>
                  )}
                </div>
              </div>
            ))}
          </div>
        )}
      </div>

      {/* –°—Ç–∞—Ç—É—Å */}
      <div style={{ background: '#e9ecef', padding: '15px', borderRadius: '4px' }}>
        <h3>–°—Ç–∞—Ç—É—Å:</h3>
        <ul>
          <li>‚úÖ HTTP API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–Ω–∞—Ç–∞–º–∏</li>
          <li>‚úÖ WebSocket –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</li>
          <li>‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã—Ö–æ–¥ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –≤–∫–ª–∞–¥–∫–∏</li>
          <li>‚úÖ WebRTC –¥–ª—è –≤–∏–¥–µ–æ-–∑–≤–æ–Ω–∫–æ–≤</li>
          <li>‚úÖ –í–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</li>
        </ul>

        <div style={{ marginTop: '10px' }}>
          <strong>–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∑–≤–æ–Ω–∫–∞:</strong>
          <ul>
            <li>–õ–æ–∫–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫: {callState.hasLocalStream ? '‚úÖ' : '‚ùå'}</li>
            <li>–í –∑–≤–æ–Ω–∫–µ: {callState.isInCall ? '‚úÖ' : '‚ùå'}</li>
            <li>–£–¥–∞–ª–µ–Ω–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏: {callState.remoteUsers.length}</li>
          </ul>
        </div>
      </div>
    </div>
  );
};